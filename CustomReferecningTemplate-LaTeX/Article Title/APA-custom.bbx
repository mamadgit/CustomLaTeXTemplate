\ProvidesFile{APA-custom.bbx}  
\RequireBibliographyStyle{numeric}  

% Define ordering rule to disambiguate similar entries  
\DeclareSortingTemplate{nyt}{%  
  \sort{  
    \field{presort}  
  }
  \sort{  
    \field{sortname}  
    \field{author}  
    \field{editor}  
    \field{translator}  
    \field{sorttitle}  
    \field{title}  
  }   
  \sort[final]{  
    \field{sortyear}  
    \field{year}  
    \field{month}  
    \field{day}  
    \field{sorttitle} 
    \field{title}  
  }   
}  
 
% Multi-letter label alphabet for year disambiguation  
\DeclareLabelalphaTemplate{  
  \labelelement{  
    \field[strwidth=1,strside=left,ifnames=1]{labelname}  
    \field[strwidth=1,strside=left,ifnames=1]{author}  
    \field[strwidth=1,strside=left,ifnames=1]{editor}  
  }  
  \labelelement{  
    \field[strwidth=1,strside=right]{labelname}  
    \field[strwidth=1,strside=right]{author}  
    \field[strwidth=1,strside=right]{editor}  
  }  
  \labelelement{  
    \field[strwidth=2]{year}  
  }  
}  

\DeclareBibliographyDriver{article}{%  
  \usebibmacro{bibindex}%  
  \printnames{author}%  
  \setunit{\labelnamepunct}\newblock  
  \printfield{year}%  
  % \iffieldundef{extrayear}{}  
  %   {\printfield{extrayear}}% This will add the 'a', 'b', 'c'... suffix  
  \newunit\newblock  
  \printfield{title}%  
  \newunit\newblock  
  \printfield{journaltitle}%  
  \setunit{\addcomma\addspace}  
  \printfield{volume}%  
  \printfield{number}%  
  \setunit{\addcomma\addspace}  
  \printfield{pages}%  
  %\newunit\newblock  
  \iffieldundef{doi}%
    {\finentry}%
    {% Check and print DOI if available  
    \printfield{doi}%  
    }%  
 }%  

\DeclareNameFormat{author}{%  
  \nameparts{#1}%  
  \ifblank{\namepartfamily}  
    {}  
    {\namepartfamily\addcomma\space}%  
  \ifblank{\namepartgiven}  
    {}  
    {\namepartgiveni\adddot}%  
    \ifthenelse{\value{listcount}<\value{liststop}}% Not the last author  
    {\ifthenelse{\value{listcount}=\numexpr\value{liststop}-1\relax}% Second to last author  
      {\addcomma\addspace\&} % Add '&' before the last author's name  
      } % Add comma after other authors  
    {} % Do not add anything after the last author    
    {\ifthenelse{\value{listcount}<20 \OR (\value{listcount}=20 \AND \value{liststop}>21)}  
      {\addcomma\space} % Add commas for the first 19 authors or if there are more than 21 authors, add comma before ellipsis  
      {\ifthenelse{\value{listcount}=20 \AND \value{liststop}>21}  
        {\addspace...\space} % After the 19th author, add ellipsis for more than 21 authors  
          {\ifthenelse{\value{listcount}=21}  
            {\addcomma\space\namepartfamily\addcomma\space\namepartgiveni\adddot} % Add final author's name after ellipsis for more than 21 authors  
            {}}}}  
} % Add comma and space after each author's name  

\DeclareFieldFormat[article]{title}{#1}   
\DeclareFieldFormat[article]{year}{% Enable 'extrayear' field for distinguishing entries with the same year  
  (#1%  
  \iffieldundef{extrayear}  
    {}  
    {\printfield{extrayear}}%  
  )}
\DeclareFieldFormat[article]{journaltitle}{\textit{#1}}  
\DeclareFieldFormat[article]{volume}{\textit{#1}}  
\DeclareFieldFormat[article]{number}{(#1)} 
\DeclareFieldFormat[article]{pages}{#1} % Just print the page numbers as is 
\DeclareFieldFormat{doi}{\url{#1}} % Format the DOI to just print the URL


\DeclareBibliographyDriver{book}{%  
  \usebibmacro{bibindex}% 
  \usebibmacro{begentry}% 
  % Check if there's an editor or whether it's an Author-Editor volume
  \ifboolexpr%
  {
    not test {\ifnameundef{author}}%
    and %
    test {\ifnameundef{editor}} %
  }%
  {%
    % Author-present case  
    \printnames{author}% Print the authors' names  
    \setunit{\labelnamepunct}\newblock%  
    \printfield{year}% Print the year in parentheses 
    \setunit{\adddot}% 
    \iffieldundef{title}%
      {\printfield{booktitle}}% If 'title' is undefined, use 'booktitle'
      {\printfield{title}}% Otherwise use 'title'
    \setunit{\addspace}%
    \iffieldundef{edition}%  
      {}%  
      {\ifthenelse{\iffieldequalstr{edition}{1st} \OR \iffieldequalstr{edition}{1}}% Check if edition is '1st' or just '1'  
        {}% Do nothing for 1st edition  
        {\printfield{edition}\addspace}% Print edition if not first  
      }%  
    % Author & Editor-present case
    \ifboolexpr{%
      not test{\ifnameundef{author}}%
      and%
      not test{\ifnameundef{editor}}%
    }
    {
      \newunit\newblock%
      \printnames{editor}%
      \setunit{\addcomma\space}%
      \printfield{booktitle}%
      \space%
      \printfield{pages}%
      \newunit\newblock%
    }
    {}
  }
  {
    % Edited book or part of an edited volume  
    \printnames{editor}% Print the editor's names  
    \setunit{\addspace}%  
    % {(Ed.)}%  
    \setunit{\labelnamepunct}\newblock%  
    \printfield{year}% Print the year in parentheses  
    \newunit\newblock%  
    \printfield{booktitle}%
  } 
  % Set to ensure no line break before publisher
  %\setunit{\addspace}%
  \newunit%  
  \printlist{publisher}%  
  \newunit\newblock%
  \iffieldundef{doi}%
    {\finentry}%
    {% Check and print DOI if available  
    \printfield{doi}%  
    }%    
}

\DeclareNameFormat{editor}{%
  \ifboolexpr
    {
      test{\ifnameundef{author}}
      and
      not test{\ifnameundef{editor}}
    }
    {\nameparts{#1}%  
    \ifblank{\namepartfamily}  
      {}  
      {\namepartfamily\addcomma\space}%  
    \ifblank{\namepartgiven}  
      {}  
      {\namepartgiveni\adddot\space (Ed.).}%  
      \ifthenelse{\value{listcount}<\value{liststop}}% Not the last author  
      {\ifthenelse{\value{listcount}=\numexpr\value{liststop}-1\relax}% Second to last author  
        {\addcomma\addspace\&} % Add '&' before the last author's name  
        } % Add comma after other authors  
      {}
      }
    {}

  \ifboolexpr
    {
      not test{\ifnameundef{author}}
      and
      not test{\ifnameundef{editor}}
    }
    {
      \nameparts{#1}%  
      \ifblank{\namepartgiven}  
        {}  
        {In\space\namepartgiveni\adddot\space}%
        \namepartfamily\space(Ed.)    
      \ifthenelse{\value{listcount}<\value{liststop}}% Not the last author  
      {\ifthenelse{\value{listcount}=\numexpr\value{liststop}-1\relax}% Second to last author  
        {\addcomma\addspace\&} % Add '&' before the last author's name  
        } % Add comma after other authors  
      {}
    }
    {}  
 % Do not add anything after the last author    


    % {\ifthenelse{\value{listcount}<20 \OR (\value{listcount}=20 \AND \value{liststop}>21)}  
    %   {\addcomma\space} % Add commas for the first 19 authors or if there are more than 21 authors, add comma before ellipsis  
    %   {\ifthenelse{\value{listcount}=20 \AND \value{liststop}>21}  
    %     {\addspace...\space} % After the 19th author, add ellipsis for more than 21 authors  
    %       {\ifthenelse{\value{listcount}=21}  
    %         {\addcomma\space\namepartfamily\addcomma\space\namepartgiveni\adddot} % Add final author's name after ellipsis for more than 21 authors  
    %         {}}}}  
} % Add comma and space after each author's name 

\DeclareFieldFormat[book]{year}{(#1)}
\DeclareFieldFormat[book]{booktitle}{\textit{#1}}
\DeclareFieldFormat[book]{title}{
\ifboolexpr
  {
    not test{\ifnameundef{author}}
    and
    not test{\ifnameundef{editor}}
  }
  {}
  {\textit{#1}}  
  }
\DeclareFieldFormat[book]{edition}{(#1\addspace ed.).}
\DeclareFieldFormat[book]{pages}{(pp. #1)}


% \DeclareBibliographyDriver{inproceedings}{%  
%   \usebibmacro{bibindex}%  
%   \usebibmacro{begentry}%
%   \printnames{author}% Print the author's name  
%   \setunit{\labelnamepunct}\newblock%  
  
%   \printfield{year}% Print the year and month (if applicable)  
%   %\newunit\newblock%  
  
%   % Check if the entry has an editor field to decide the format  
%   \iffieldundef{editor}%
%   {%  
%     % Format for a conference presentation  
%     \printfield{eventdate}% Print the event date (e.g., "Year, Month dates")  
%     \newunit\newblock%  
%     \printfield{title}% Print the paper title in italics  
%     \setunit{\addspace}%  
%     {[Paper presentation]}%  
%     \newunit\newblock%  
%     \printfield{eventtitle}% Conference name  
%     \setunit{\addcomma\space}%  
%     \printfield{address}% Location of the conference  
%   }%
%   {%  
%     % Format for a conference proceedings with an editor  
%     \printfield{title}% Print the paper title  
%     \newunit\newblock%  
%     \printnames{editor}% Print the editor's name  
%     \setunit{\addspace}%  
%     {(Ed.),}%  
%     \newunit\newblock%  
%     \printfield{booktitle}% Print the conference title in italics  
%     \setunit{\addspace}%  
%     \printfield{pages}% Print the pages  
%     \newunit%  
%     \printlist{publisher}% Print the publisher  
%   }%  
  
%   \newunit\newblock%
%   \iffieldundef{doi}{%
%     \finentry%
%   }%
%   {%
%     \printfield{doi}%
%   }%  
% }
\ExplSyntaxOn  
% Define a new command to extract event information by parsing backward  
\newcommand{\ExtractEventInfo}[1]{%  
  \tl_set:Nn \l_tmpa_tl {#1}% Store the booktitle in \l_tmpa_tl  
  \tl_reverse:N \l_tmpa_tl% Reverse the string  
  % Extract dates at the beginning due to the string being reversed  
  \regex_extract_once:nnN { ^\s*(\d{4}\s*,\s*[^\s,]+(?:\s*-\s*[^\s,]+)?\s+[A-Za-z]+)\s* } { \l_tmpa_tl } \l_dates_reversed_tl%   
  % Remove the extracted dates from \l_tmpa_tl  
  \tl_set:Nx \l_tmpa_tl { \tl_remove_once:Nn \l_tmpa_tl { \l_dates_reversed_tl } }%  
  % Extract Location  
  \regex_extract_once:nnN { ^\s*,?\s*([^,]+) } { \l_tmpa_tl } \l_location_reversed_tl%  
  \tl_set:Nx \l_tmpa_tl { \tl_remove_once:Nn \l_tmpa_tl { ,\c{ } \l_location_reversed_tl } }%  
  % Remaining is the event name reversed  
  \tl_set:Nn \l_eventname_reversed_tl { \l_tmpa_tl }%  
  % Reverse back to original  
  \tl_reverse:N \l_eventname_reversed_tl%  
  \tl_reverse:N \l_location_reversed_tl%  
  \tl_reverse:N \l_dates_reversed_tl%  
  % Assign results  
  \tl_set_eq:NN \l_eventname_tl { \l_eventname_reversed_tl }%  
  \tl_set_eq:NN \l_location_tl { \l_location_reversed_tl }%  
  \tl_set_eq:NN \l_dates_tl { \l_dates_reversed_tl }%  
  % Trim spaces  
  \tl_trim_spaces:N \l_eventname_tl%  
  \tl_trim_spaces:N \l_location_tl%  
  \tl_trim_spaces:N \l_dates_tl%  
}  
\ExplSyntaxOff

\DeclareBibliographyDriver{inproceedings}{%  
  \usebibmacro{bibindex}%  
  \usebibmacro{begentry}%  
  \printnames{author}%  
  \setunit{\labelnamepunct}\newblock%  
  \printfield{year}%  
  \setunit{\labelnamepunct}\newblock%  
  \iffieldundef{editor}%   
  {% % For when there is no editor and the bibliography should be printed as a conference session  
    \printfield{title}%  
    \newunit\newline%  
    \printtext{[Conference session]}%  
    \newunit\newline%  
    \ExtractEventInfo{\thefield{booktitle}}%  
    \printtext{\l_eventname_tl}%  
    \newunit\newline%  
    \printtext{\l_location_tl}%  
    \newunit\newline%  
    \printtext{(\l_dates_tl)}%  
    \newunit\newline%  
    \printfield{doi}%  
  }%  
  {% % For when there is an editor and the bibliography should be printed as an edited chapter in a book  
    \printfield{title}%  
    \newunit\newline%  
    \printtext{In }%  
    \printnames{editor}%  
    \printtext{ (Ed.), }%  
    \printfield{booktitle}%  
    \newunit\newline%  
    \printfield{pages}%  
    \newunit\newline%  
    \printfield{publisher}%  
    \newunit\newline%  
    \printfield{doi}%  
  }%  
  \usebibmacro{finentry}%  
}

\DeclareBibliographyDriver{phdthesis}{%  
  \usebibmacro{bibindex}%  
  \printnames{author}% Print the author's name  
  \setunit*{\labelnamepunct}\newblock%  
  \printfield{year}% Print the year in parentheses  
  \newunit\newblock%  
  \printfield{title}% Print the dissertation title  
  \setunit{\addspace}%  
  % Check if the thesis is unpublished or published  
  \ifthenelse{\iffieldequalstr{type}{unpublished}}{% For unpublished theses  
    {(\printfield{type})} % E.g., Unpublished doctoral dissertation  
  }{%  
    \printfield{number}% Publication number if published  
    \addspace
    \printfield{[type\addcomma institution]}% E.g., Doctoral dissertation  and University or institution  
    \setunit{\addspace}\newblock  
    \printfield{publisher}% Repository or publisher like Proquest  
  }%  
  \ifthenelse{\iffieldundef{institution}}{}{% Check if institution is defined  
    {[\printfield{institution}]}% University or institution for published  
  }%  
  \finentry  
}

\DeclareFieldFormat[phdthesis]{year}{(#1)}
\DeclareFieldFormat[phdthesis]{title}{\textit{#1}}
\DeclareIndexFieldFormat[phdthesis]{type}{(#1)}
\DeclareIndexFieldFormat[phdthesis]{number}{(Publication No.\space #1)}

\ExecuteBibliographyOptions{labeldateparts=true, sorting=nyt, maxnames=20}